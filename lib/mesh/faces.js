"use strict";exports.__esModule=true;exports.Faces=void 0;var _math=require("../utils/math");var _vector=require("../geometry/vector");var _face=require("../shape/face");class Faces extends Array{constructor({faces}){faces=faces.map(([a,b,c])=>{const key=Array.isArray(a)?"vertices":"indices";return new _face.Face({[key]:[a,b,c]})});super(...faces)}static fromMesh({mesh}){}static get[Symbol.species](){return Array}get mapped(){return this[0].mapped}get faces(){return this}set faces(faces){this.faces=faces}get center(){if(!this.mapped)throw new Error(`Cannot compute the center of the faces - the faces are not mapped to vertices`);return new _vector.Vector((0,_math.divide)(this.faces.reduce((sum,{vertices})=>(0,_math.add)(sum,vertices),[0,0,0]),this.faces.length))}get area(){if(!this.mapped)throw new Error(`Cannot compute the area of the faces - the faces are not mapped to vertices`);const value=this.faces.reduce((sum,{area})=>(0,_math.add)(sum,area),0);return(0,_math.toMeters)(value)}}exports.Faces=Faces;