"use strict";exports.__esModule=true;exports.Facewinder=void 0;var _math=require("../../utils/math");class Facewinder{constructor(faces){this.faces=faces;this.windings=new Array(faces.length);const index=0;const face=this.faces[index];if((0,_math.divide)((0,_math.multiply)((0,_math.dot)(face.a,face.normal),Number(face.area)),3)<0){face.reverse()}this.updateFaceWinding(index,face)}indexOfFace(face){for(const i in this.faces){if(this.faces[i].equals(face))return Number(i)}}updateFaceWinding(index,indices){this.faces[index].update(indices);this.windings[index]=true;this.updateAdjacentFaceWinding(index)}updateAdjacentFaceWinding(index){const face=this.faces[index];const adjacentFaces=this.faces[index].adjacentFaces;for(const i in adjacentFaces){if(!adjacentFaces[i])continue;const adjacentIndex=this.indexOfFace(adjacentFaces[i]);if(this.windings[adjacentIndex])continue;const[i0,i1]=face.edges[i];for(const i2 of adjacentFaces[i]){if(i0!=i2&&i1!=i2){this.updateFaceWinding(adjacentIndex,[i1,i0,i2])}}}}}exports.Facewinder=Facewinder;