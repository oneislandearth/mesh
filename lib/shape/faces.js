"use strict";exports.__esModule=true;exports.Faces=void 0;var _math=require("@oneisland/math");var _face=require("./face");var _facewinder=require("../utils/facewinder");var _validator=require("@oneisland/validator");const{validate}=new _validator.Validator("Faces");class Faces extends Array{constructor(faces,mesh=null){validate({mesh},"Mesh");for(const face of faces){if(face.length==3){mesh.faces.push(new _face.Face(face,mesh))}else{throw new Error("Face triangulation is not yet supported - faces must only contain three points")}}super(...mesh.faces);this.mesh=mesh}static get[Symbol.species](){return Array}get area(){const value=this.reduce((sum,{area})=>(0,_math.add)(sum,Number(area)),0);return(0,_math.toMeters)(value)}computeNormals(){new _facewinder.Facewinder(this.mesh)}toString(){return JSON.stringify(this)}}exports.Faces=Faces;
//# sourceMappingURL=faces.js.map