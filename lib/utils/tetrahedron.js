"use strict";exports.__esModule=true;exports.Tetrahedron=void 0;var _math=require("@oneisland/math");var _validator=require("@oneisland/validator");const{validate}=new _validator.Validator("Edge");class Tetrahedron{constructor([a,b,c,d]){validate({a,b,c,d},["Point","Vertex"]);this.points=[a,b,c,d]}containsPoint(point){validate({point},["Point","Vertex"]);for(const side in this.points){const[a,b,c,d]=[this.points[side],this.points[(side+1)%this.points.length],this.points[(side+2)%this.points.length],this.points[(side+3)%this.points.length]];const normal=(0,_math.cross)((0,_math.subtract)(b,a),(0,_math.subtract)(c,a));if((0,_math.sign)((0,_math.dot)(normal,(0,_math.subtract)(d,a)))!=(0,_math.sign)((0,_math.dot)(normal,(0,_math.subtract)(point,a))))return false}return true}}exports.Tetrahedron=Tetrahedron;
//# sourceMappingURL=tetrahedron.js.map