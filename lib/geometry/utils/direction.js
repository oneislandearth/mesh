"use strict";exports.__esModule=true;exports.Direction=void 0;var _math=require("@oneisland/math");var _vector=require("../vector");var _validator=require("@oneisland/validator");const{validate}=new _validator.Validator("Direction");class Direction extends _vector.Vector{constructor([x,y,z]){validate({x,y,z},"Number");[x,y,z]=(0,_math.unit)([x,y,z]);super([x,y,z])}get species(){return"Direction"}static center(){return new Direction([0,0,0])}static right(){return new Direction([1,0,0])}static left(){return new Direction([-1,0,0])}static up(){return new Direction([0,1,0])}static down(){return new Direction([0,-1,0])}static forwards(){return new Direction([1,0,0])}static backwards(){return new Direction([-1,0,0])}static fromAxis(axis){axis=String(axis).toLowerCase();const axies=["x","y","z"];if(axies.indexOf(axis)==-1)throw new TypeError("Direction.fromAxis expects \"axis\" to be a \"x\", \"y\" or \"z\"");const direction=[0,0,0];direction[axies.indexOf(axis)]=1;return new Direction(direction)}static get[Symbol.species](){return Array}}exports.Direction=Direction;
//# sourceMappingURL=direction.js.map