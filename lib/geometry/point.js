"use strict";exports.__esModule=true;exports.Point=void 0;var _math=require("@oneisland/math");var _vector=require("./vector");var _plane=require("./plane");var _angle=require("./utils/angle");var _direction=require("./utils/direction");var _quaternion=require("./utils/quaternion");var _validator=require("@oneisland/validator");const{validate}=new _validator.Validator("Point");class Point extends _vector.Vector{constructor([x,y,z]){validate({x,y,z},"Number");super([x,y,z])}get species(){return"Point"}static get[Symbol.species](){return Array}angleBetweenPoint(point){validate({point},"Point");const angle=(0,_math.acos)((0,_math.divide)((0,_math.dot)([this.x,this.y,this.z],point),(0,_math.multiply)((0,_math.norm)([this.x,this.y,this.z]),(0,_math.norm)(point))));return new _angle.Angle(angle)}projectToPlane(plane){validate({plane},"Plane");const distance=(0,_math.dot)(plane.normal,[this.x,this.y,this.z]);const projected=(0,_math.subtract)([this.x,this.y,this.z],(0,_math.multiply)(distance,plane.normal));return new Point(projected)}toVector(){return new _vector.Vector([this.x,this.y,this.z])}}exports.Point=Point;
//# sourceMappingURL=point.js.map