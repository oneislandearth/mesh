"use strict";exports.__esModule=true;exports.Facewinder=void 0;class Facewinder{constructor(faces){this.faces=faces;this.windings=new Array(faces.length);this.updateFaceWinding(this.faces[0],[0,1,2])}indexOfFace(face){for(const i in this.faces){if(this.faces[i].equals(face))return i}}updateFaceWinding(face,order){console.log(face);face.reorder(order);console.log(face);this.windings[this.indexOfFace(face)]=true;this.updateAdjacentFaceWinding(face)}updateAdjacentFaceWinding(face){console.log(face.a);for(const i in face.adjacentFaces){if(this.windings[i])continue;const[i0,i1]=[i,(i+1)%3];const[v0,v1]=[face.vertices[i0],face.vertices[i1]];console.log(face.adjacentFaces[i]);for(const i2 in face.adjacentFaces[i].vertices){const vertex=face.adjacentFaces[i].vertices[i2];if(!vertex.equals(v0)&&!vertex.equals(v1)){this.updateFaceWinding(face.adjacentFaces[i],[i1,i0,i2])}}}}}exports.Facewinder=Facewinder;