{"version":3,"sources":["../../src/shape/vertices.js"],"names":["validate","Validator","Vertices","Array","constructor","vertices","mesh","map","vertex","Vertex","Symbol","species"],"mappings":"6DACA,gCAGA,+CAGA,KAAM,CAAEA,QAAF,EAAe,GAAIC,qBAAJ,CAAc,UAAd,CAArB,CAGO,KAAMC,CAAAA,QAAN,QAAuBC,CAAAA,KAAM,CAGlCC,WAAW,CAACC,QAAD,CAAWC,IAAI,CAAG,IAAlB,CAAwB,CAGjCN,QAAQ,CAAC,CAAEM,IAAF,CAAD,CAAW,MAAX,CAAR,CAGAD,QAAQ,CAAGA,QAAQ,CAACE,GAAT,CAAaC,MAAM,EAAI,GAAIC,eAAJ,CAAWD,MAAX,CAAmBF,IAAnB,CAAvB,CAAX,CAGA,MAAM,GAAGD,QAAT,EAGA,KAAKC,IAAL,CAAYA,IACb,CAGD,WAAYI,MAAM,CAACC,OAAnB,GAA8B,CAC5B,MAAOR,CAAAA,KACR,CArBiC,C","sourcesContent":["// Import the required shape modules\nimport { Vertex } from 'shape/vertex';\n\n// Import the validator utility\nimport { Validator } from '@oneisland/validator';\n\n// Define a validator for the class\nconst { validate } = new Validator('Vertices');\n\n// Define a class for a group of Face classes\nexport class Vertices extends Array {\n\n  // Define the constructor\n  constructor(vertices, mesh = null) {\n\n    // Throw an error if the mesh in not a Mesh\n    validate({ mesh }, 'Mesh');\n\n    // Map each of the vertices to a Vertex\n    vertices = vertices.map(vertex => new Vertex(vertex, mesh));\n    \n    // Bind the array of vertices to the class\n    super(...vertices);\n\n    // Define the reference to the mesh\n    this.mesh = mesh;\n  }\n\n  // Define the species to be an array\n  static get [Symbol.species]() {\n    return Array; \n  }\n}"],"file":"vertices.js"}